[
  {
    "cmd": [
      "touch",
      "[TMP_BASE]/tar-example_tmp_1/a"
    ],
    "name": "touch a"
  },
  {
    "cmd": [
      "touch",
      "[TMP_BASE]/tar-example_tmp_1/b"
    ],
    "name": "touch b"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[TMP_BASE]/tar-example_tmp_1/sub/dir",
      "511"
    ],
    "name": "makedirs mkdirs",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "touch",
      "[TMP_BASE]/tar-example_tmp_1/sub/dir/c"
    ],
    "name": "touch c"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::tar]/resources/tar.py"
    ],
    "name": "taring",
    "stdin": "{\"compression\": \"None\", \"entries\": [{\"path\": \"[TMP_BASE]/tar-example_tmp_1\", \"type\": \"dir\"}], \"output\": \"[TMP_BASE]/tar-example_tmp_1/output.tar\", \"root\": \"[TMP_BASE]/tar-example_tmp_1\"}"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::tar]/resources/tar.py"
    ],
    "name": "taring more",
    "stdin": "{\"compression\": \"gz\", \"entries\": [{\"archive_name\": null, \"path\": \"[TMP_BASE]/tar-example_tmp_1/a\", \"type\": \"file\"}, {\"archive_name\": null, \"path\": \"[TMP_BASE]/tar-example_tmp_1/b\", \"type\": \"file\"}, {\"path\": \"[TMP_BASE]/tar-example_tmp_1/sub\", \"type\": \"dir\"}], \"output\": \"[TMP_BASE]/tar-example_tmp_1/more.tar.gz\", \"root\": \"[TMP_BASE]/tar-example_tmp_1\"}"
  },
  {
    "cmd": [
      "echo",
      "[TMP_BASE]/tar-example_tmp_1/more.tar.gz"
    ],
    "name": "report"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::tar]/resources/untar.py"
    ],
    "name": "untaring",
    "stdin": "{\"output\": \"[TMP_BASE]/tar-example_tmp_1/output\", \"quiet\": true, \"tar_file\": \"[TMP_BASE]/tar-example_tmp_1/output.tar\"}"
  },
  {
    "cmd": [
      "find"
    ],
    "cwd": "[TMP_BASE]/tar-example_tmp_1/output",
    "name": "listing"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[build::file]/resources/fileutil.py",
      "rmtree",
      "[TMP_BASE]/tar-example_tmp_1"
    ],
    "infra_step": true,
    "name": "rmtree cleanup"
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]